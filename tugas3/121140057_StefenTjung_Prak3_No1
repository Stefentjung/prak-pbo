class BankAccount:
    costumer_list = []
    
    def __init__(self, id_customer, name, balance):
        self.id_customer = id_customer
        self.name = name
        self.balance = balance
        self.customers.append(self)
    
    @classmethod
    def lihat_menu(cls):
        print("Menu:")
        print("1. Lihat Saldo")
        print("2. Tarik Tunai")
        print("3. Transfer Saldo")
        print("4. Keluar")
    
    @classmethod
    def lihat_saldo(cls, id_customer):
        for customer in cls.customers:
            if customer.id_customer == id_customer:
                print(f"{customer.name}'s bank balance is {customer.balance}")
                return
        print("Customer not found")
    
    @classmethod
    def tarik_tunai(cls, id_customer, amount):
        for customer in cls.customers:
            if customer.id_customer == id_customer:
                if customer.balance >= amount:
                    customer.balance -= amount
                    print(f"{amount} withdrawn from {customer.name}'s account")
                    print(f"New balance: {customer.balance}")
                else:
                    print("Insufficient funds")
                return
        print("Customer not found")
    
    @classmethod
    def transfer(cls, id_sender, id_receiver, amount):
        sender = None
        receiver = None
        for customer in cls.customers:
            if customer.id_customer == id_sender:
                sender = customer
            elif customer.id_customer == id_receiver:
                receiver = customer
        if sender is None:
            print("Sender not found")
            return
        if receiver is None:
            print("Receiver not found")
            return
        if sender.balance >= amount:
            sender.balance -= amount
            receiver.balance += amount
            print(f"{amount} transferred from {sender.name} to {receiver.name}")
            print(f"{sender.name}'s new balance: {sender.balance}")
            print(f"{receiver.name}'s new balance: {receiver.balance}")
        else:
            print("Insufficient funds")
    
    @classmethod
    def exit_menu(cls):
        
    Akun1 = AkunBank(1234, isi_nama_kalian, 5 000 000 000)
    Akun2 = AkunBank(2345, "Ukraina", 6 666 666 666)
    Akun3 = AkunBank(3456, "Elon Musk", 9 999 999 999)   
    
    
    


